{
    "lumaMatrix.clearIcon": "Lösche icon",
    "lumaMatrix.clearIcon|param|icon": "ist die Nummer des Icons [0..3]. Andere Werte löschen alle Icons",
    "lumaMatrix.initializeMatrixInterfaceExpert": "Diese Funktion initialisiert die Matrix mit den angegebenen Pins für joystick und den Schalter.",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinCenterButtonTemp": "ist der GPIO-Pin für den Mittelknopf des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinDownButtonTemp": "ist der GPIO-Pin für den Knopf nach unten des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinLeftButtonTemp": "ist der GPIO-Pin für den Knopf nach links des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinRightButtonTemp": "ist der GPIO-Pin für den Knopf nach rechts des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinSwitchTemp": "ist der GPIO-Pin für den Schalter",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinUpButtonTemp": "ist der GPIO-Pin für den Knopf nach oben des Joysticks",
    "lumaMatrix.setCurrentTimeStr": "Setze interne Uhrzeit auf die angegebene Zeit",
    "lumaMatrix.setCurrentTimeStr|param|timestring": "im Format \"hh:mm:ss\"",
    "lumaMatrix.setIconColor": "Setze die Farbe des angegebenen Icons",
    "lumaMatrix.setIconColor|param|icon": "ist die Nummer des Icons [0..3]. Andere Werte setzen die Farbe aller Icons",
    "lumaMatrix.setJoystickTimeEnable": "Aktiviert oder deaktiviert die Joystick-Zeitsteuerung. Rauf/Runter ändert die Stunden, Links/Rechts ändert die Minuten",
    "lumaMatrix.setJoystickTimeEnable|param|state": "ist true, um die Joystick-Zeitsteuerung zu aktivieren",
    "lumaMatrix.getCurrentTime": "Lese die aktuelle Zeit, bei Fehler 0.",
    "lumaMatrix.getCurrentTimeAsText": "Lese die aktuelle Zeit als String \"hh:mm:ss\".",
    "lumaMatrix.setCurrentTime": "Setze interne Zeit auf neuen Wert",
    "lumaMatrix.setCurrentTime|param|hours": "Zahl von 0 bis 23",
    "lumaMatrix.setCurrentTime|param|minutes": "Zahl von 0 bis 59",
    "lumaMatrix.setCurrentTime|param|seconds": "Zahl von 0 bis 59",
    "lumaMatrix.applyPixelBuffer": "Schreibe einen Buffer voller Farben auf die Matrix. Farben müssen in 3 aufeinanderfolgenden Bytes in der Reihenfolge Rot, Grün, Blau aufgeteilt sein.",
    "lumaMatrix.clear": "Lösche alle Pixel der Luma Matrix",
    "lumaMatrix.compareJoystick": "Vergleiche Luma Matrix Joystick-Position",
    "lumaMatrix.createWordClock": "Initialisiere Word Clock mit definierten Farben. Pixels werden abhängig von der Zeit angesteuert.\r\nOptional Joystick true ermöglicht das setzen der Zeit mit dem Joystick. Dies kann während der Laufzeit geändert werden.",
    "lumaMatrix.debugEnable": "Aktiviere serielle Nachrichten für Debugging, die von der Luma Matrix-Erweiterung gesendet werden.",
    "lumaMatrix.eColorPalette": "Enum mit vordefinierten Farben, um die Paketgröße über Funk zu reduzieren",
    "lumaMatrix.eDataType": "Enum mit vordefinierten Datentypen in Nachrichten, gesendet über Funk.",
    "lumaMatrix.getColorFromPixel": "Lese die Farbe des Pixels an Koordinate (x,y)",
    "lumaMatrix.getColorPalette": "Element vom Enum mit vordefinierten Farben, um die Paketgröße über Funk zu reduzieren",
    "lumaMatrix.getDataType": "Element vom Enum mit vordefinierten Datentypen in Nachrichten, gesendet über Funk.",
    "lumaMatrix.getJoystickDirectionEnum": "Wähle eine Richtung vom Joystick Enum",
    "lumaMatrix.getMatrixImage": "Erhalte eine Repräsentation, welche Pixel eingeschaltet sind. Nur Bitmap ist verfügbar ohne Farbinformationen.",
    "lumaMatrix.getPixelBuffer": "Erhalte den Buffer mit gespeicherten Farben für jeden Pixel. Jeder Pixel verwendet 3 Bytes in der Reihenfolge Rot, Grün, Blau.",
    "lumaMatrix.initializeMatrix": "Initialisiere die 8 mal 8 Neopixel Matrix mit einem Joystick. \r\nDieser Block muss nur einmal am Anfang ausgeführt werden.",
    "lumaMatrix.isSwitchSet": "Vergleiche Luma Matrix Schalterposition",
    "lumaMatrix.joystickChangedThread": "Erstellt einen Thread, um die Joystick-Richtung abzufragen und eine Callback-Funktion auszuführen, wenn sich die Richtung ändert. \r\nDer ziehbare Parameter \"direction\" enthält den Wert, der den Aufruf ausgelöst hat",
    "lumaMatrix.matrix8x8": "8 mal 8 Matrix Bitmap",
    "lumaMatrix.movingImage": "Lass Text über die Matrix scrollen, Buchstabe für Buchstabe von rechts nach links.",
    "lumaMatrix.onReceivedMatrix": "Höre auf eingehende Nachrichten. Funkkanal mus zuvor gesetzt sein.",
    "lumaMatrix.parseBufferForColor": "Durchsuche empfangene Nachricht nach Farbe",
    "lumaMatrix.parseColorImage": "Durchsuche empfangene Nachricht nach farbigem Bild",
    "lumaMatrix.parseImage": "Durchsuche empfangene Nachricht nach Bild",
    "lumaMatrix.readJoystick": "Lese Luma Matrix Joystick-Position",
    "lumaMatrix.readJoystickText": "Lese Luma Matrix Joystick-Position als Text",
    "lumaMatrix.readSwitch": "Lese Luma Matrix Schalterposition",
    "lumaMatrix.rgbToColor": "Kombiniere Farbkanäle zu einer 24-Bit-Farbennummer",
    "lumaMatrix.scrollText": "Lass Text über die Luma Matrix-Pixel scrollen.",
    "lumaMatrix.sendImageWithColor": "Sende Bitmap in einer einzigen Farbe an andere Luma Matrix über Funk. Der Funkkanal muss im Voraus festgelegt werden",
    "lumaMatrix.sendPixelBuffer": "Sende komprimierten Pixel-Buffer in Farben der Palette an andere Luma Matrix über Funk. Der Funkkanal muss im Voraus festgelegt werden",
    "lumaMatrix.setBrightness": "Setze die Helligkeit aller Pixel im Bereich von 0 bis 255.",
    "lumaMatrix.setOnePixel": "Setze die Farbe eines Pixels an einer Koordinate auf einen 24-Bit-Farbwert.",
    "lumaMatrix.setOnePixelRGB": "Setze die Farbe eines Pixels an einer Koordinate auf die Farbkanäle.",
    "lumaMatrix.setWordColors": "Setze die Farben der Wörter auf neue Werte.",
    "lumaMatrix.showImage": "Schreibe eine Bitmap von Pixeln in einer definierten Farbe auf die Matrix.\r\nDie Schicht ist standardmäßig aktiv und löscht nicht gesetzte Pixel nicht.",
    "lumaMatrix.snake": "Vollständig implementiertes Snake-Spiel mit Joystick-Steuerung.\r\nSetze diesen Block nur einmal am Anfang.",
    "lumaMatrix.switchValueChangedThread": "Erstellt einen Thread, um den Schalterzustand abzufragen und eine Callback-Funktion auszuführen, wenn sich der Zustand ändert.",
    "lumaMatrix.testLedMatrixHW": "Definierte Testsequenz, die jeden Aspekt der Hardware überprüft."
}